// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	PublishRequest
	PublishResponse
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// TODO: use smaller ints that are a better fit
type PublishRequest struct {
	UnixTime      int64  `protobuf:"varint,1,opt,name=unix_time,json=unixTime" json:"unix_time,omitempty"`
	Running       bool   `protobuf:"varint,2,opt,name=running" json:"running,omitempty"`
	MilliCpuUsage uint64 `protobuf:"varint,3,opt,name=milli_cpu_usage,json=milliCpuUsage" json:"milli_cpu_usage,omitempty"`
	MemoryTotalMb uint64 `protobuf:"varint,4,opt,name=memory_total_mb,json=memoryTotalMb" json:"memory_total_mb,omitempty"`
	MemoryRssMb   uint64 `protobuf:"varint,5,opt,name=memory_rss_mb,json=memoryRssMb" json:"memory_rss_mb,omitempty"`
	MemoryLimitMb uint64 `protobuf:"varint,6,opt,name=memory_limit_mb,json=memoryLimitMb" json:"memory_limit_mb,omitempty"`
	DiskUsageMb   uint64 `protobuf:"varint,7,opt,name=disk_usage_mb,json=diskUsageMb" json:"disk_usage_mb,omitempty"`
	DiskLimitMb   uint64 `protobuf:"varint,8,opt,name=disk_limit_mb,json=diskLimitMb" json:"disk_limit_mb,omitempty"`
	DiskReadKbps  uint64 `protobuf:"varint,9,opt,name=disk_read_kbps,json=diskReadKbps" json:"disk_read_kbps,omitempty"`
	DiskWriteKbps uint64 `protobuf:"varint,10,opt,name=disk_write_kbps,json=diskWriteKbps" json:"disk_write_kbps,omitempty"`
	DiskReadIops  uint64 `protobuf:"varint,11,opt,name=disk_read_iops,json=diskReadIops" json:"disk_read_iops,omitempty"`
	DiskWriteIops uint64 `protobuf:"varint,12,opt,name=disk_write_iops,json=diskWriteIops" json:"disk_write_iops,omitempty"`
}

func (m *PublishRequest) Reset()                    { *m = PublishRequest{} }
func (m *PublishRequest) String() string            { return proto.CompactTextString(m) }
func (*PublishRequest) ProtoMessage()               {}
func (*PublishRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PublishRequest) GetUnixTime() int64 {
	if m != nil {
		return m.UnixTime
	}
	return 0
}

func (m *PublishRequest) GetRunning() bool {
	if m != nil {
		return m.Running
	}
	return false
}

func (m *PublishRequest) GetMilliCpuUsage() uint64 {
	if m != nil {
		return m.MilliCpuUsage
	}
	return 0
}

func (m *PublishRequest) GetMemoryTotalMb() uint64 {
	if m != nil {
		return m.MemoryTotalMb
	}
	return 0
}

func (m *PublishRequest) GetMemoryRssMb() uint64 {
	if m != nil {
		return m.MemoryRssMb
	}
	return 0
}

func (m *PublishRequest) GetMemoryLimitMb() uint64 {
	if m != nil {
		return m.MemoryLimitMb
	}
	return 0
}

func (m *PublishRequest) GetDiskUsageMb() uint64 {
	if m != nil {
		return m.DiskUsageMb
	}
	return 0
}

func (m *PublishRequest) GetDiskLimitMb() uint64 {
	if m != nil {
		return m.DiskLimitMb
	}
	return 0
}

func (m *PublishRequest) GetDiskReadKbps() uint64 {
	if m != nil {
		return m.DiskReadKbps
	}
	return 0
}

func (m *PublishRequest) GetDiskWriteKbps() uint64 {
	if m != nil {
		return m.DiskWriteKbps
	}
	return 0
}

func (m *PublishRequest) GetDiskReadIops() uint64 {
	if m != nil {
		return m.DiskReadIops
	}
	return 0
}

func (m *PublishRequest) GetDiskWriteIops() uint64 {
	if m != nil {
		return m.DiskWriteIops
	}
	return 0
}

type PublishResponse struct {
}

func (m *PublishResponse) Reset()                    { *m = PublishResponse{} }
func (m *PublishResponse) String() string            { return proto.CompactTextString(m) }
func (*PublishResponse) ProtoMessage()               {}
func (*PublishResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*PublishRequest)(nil), "PublishRequest")
	proto.RegisterType((*PublishResponse)(nil), "PublishResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Aggregator service

type AggregatorClient interface {
	Publish(ctx context.Context, in *PublishRequest, opts ...grpc.CallOption) (*PublishResponse, error)
}

type aggregatorClient struct {
	cc *grpc.ClientConn
}

func NewAggregatorClient(cc *grpc.ClientConn) AggregatorClient {
	return &aggregatorClient{cc}
}

func (c *aggregatorClient) Publish(ctx context.Context, in *PublishRequest, opts ...grpc.CallOption) (*PublishResponse, error) {
	out := new(PublishResponse)
	err := grpc.Invoke(ctx, "/Aggregator/Publish", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Aggregator service

type AggregatorServer interface {
	Publish(context.Context, *PublishRequest) (*PublishResponse, error)
}

func RegisterAggregatorServer(s *grpc.Server, srv AggregatorServer) {
	s.RegisterService(&_Aggregator_serviceDesc, srv)
}

func _Aggregator_Publish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AggregatorServer).Publish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Aggregator/Publish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AggregatorServer).Publish(ctx, req.(*PublishRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Aggregator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Aggregator",
	HandlerType: (*AggregatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Publish",
			Handler:    _Aggregator_Publish_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 321 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0xcf, 0x4a, 0xf3, 0x40,
	0x14, 0x47, 0xbf, 0x7c, 0xad, 0xfd, 0x33, 0xad, 0xad, 0x66, 0x35, 0xe8, 0xa6, 0x04, 0x91, 0xae,
	0xb2, 0xd0, 0xad, 0x1b, 0x71, 0x25, 0x5a, 0x90, 0x50, 0x71, 0x39, 0x64, 0xec, 0x10, 0x2f, 0x4d,
	0x32, 0xe3, 0xdc, 0x19, 0xd4, 0x27, 0xf4, 0xb5, 0xe4, 0x4e, 0xda, 0xda, 0xd4, 0x65, 0x0e, 0x27,
	0x87, 0x1f, 0xdc, 0x61, 0xc3, 0xdc, 0x40, 0x6a, 0xac, 0x76, 0x3a, 0xf9, 0xee, 0xb0, 0xc9, 0x93,
	0x97, 0x25, 0xe0, 0x5b, 0xa6, 0xde, 0xbd, 0x42, 0x17, 0x9f, 0xb3, 0xa1, 0xaf, 0xe1, 0x53, 0x38,
	0xa8, 0x14, 0x8f, 0x66, 0xd1, 0xbc, 0x93, 0x0d, 0x08, 0x2c, 0xa1, 0x52, 0x31, 0x67, 0x7d, 0xeb,
	0xeb, 0x1a, 0xea, 0x82, 0xff, 0x9f, 0x45, 0xf3, 0x41, 0xb6, 0xfd, 0x8c, 0x2f, 0xd9, 0xb4, 0x82,
	0xb2, 0x04, 0xf1, 0x6a, 0xbc, 0xf0, 0x98, 0x17, 0x8a, 0x77, 0x66, 0xd1, 0xbc, 0x9b, 0x1d, 0x07,
	0x7c, 0x67, 0xfc, 0x33, 0xc1, 0xe0, 0xa9, 0x4a, 0xdb, 0x2f, 0xe1, 0xb4, 0xcb, 0x4b, 0x51, 0x49,
	0xde, 0xdd, 0x78, 0x01, 0x2f, 0x89, 0x2e, 0x64, 0x9c, 0xb0, 0x0d, 0x10, 0x16, 0x91, 0xac, 0xa3,
	0x60, 0x8d, 0x1a, 0x98, 0x21, 0x2e, 0xe4, 0x5e, 0xab, 0x84, 0x0a, 0x1c, 0x59, 0xbd, 0xfd, 0xd6,
	0x23, 0xd1, 0xa6, 0xb5, 0x02, 0x5c, 0x37, 0xb3, 0xc8, 0xea, 0x37, 0x2d, 0x82, 0x61, 0xd5, 0x9e,
	0xb3, 0x2b, 0x0d, 0x7e, 0x9d, 0x6d, 0xe7, 0x82, 0x4d, 0x82, 0x63, 0x55, 0xbe, 0x12, 0x6b, 0x69,
	0x90, 0x0f, 0x83, 0x34, 0x26, 0x9a, 0xa9, 0x7c, 0xf5, 0x20, 0x0d, 0xd2, 0xaa, 0x60, 0x7d, 0x58,
	0x70, 0xaa, 0xd1, 0x58, 0xb3, 0x8a, 0xf0, 0x0b, 0xd1, 0xe0, 0xb5, 0x6a, 0xa0, 0x0d, 0xf2, 0x51,
	0xbb, 0x76, 0xaf, 0xff, 0xd4, 0x82, 0x36, 0x3e, 0xa8, 0x91, 0x97, 0x9c, 0xb2, 0xe9, 0xee, 0x90,
	0x68, 0x74, 0x8d, 0xea, 0xea, 0x86, 0xb1, 0xdb, 0xa2, 0xb0, 0xaa, 0xc8, 0x9d, 0xb6, 0x71, 0xca,
	0xfa, 0x1b, 0x21, 0x9e, 0xa6, 0xed, 0x9b, 0x9f, 0x9d, 0xa4, 0x07, 0xff, 0x26, 0xff, 0x64, 0x2f,
	0xbc, 0x90, 0xeb, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xee, 0x42, 0x1d, 0x23, 0x2e, 0x02, 0x00,
	0x00,
}
